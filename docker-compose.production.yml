services:
  frontend:
    container_name: pokedex-frontend
    image: ${DOCKER_REGISTRY}/${GITHUB_REPOSITORY}-frontend:${VERSION:-latest}
    build:
      context: ./pokedex-frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-80}:8081"
    environment:
      - BACKEND_API_URL=${BACKEND_URL:-http://localhost:3000}
    networks:
      - pokedex-network
    depends_on:
      - backend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  backend:
    container_name: pokedex-backend
    image: ${DOCKER_REGISTRY}/${GITHUB_REPOSITORY}-backend:${VERSION:-latest}
    build:
      context: ./pokedex-backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    env_file:
      - ./pokedex-backend/.env
    networks:
      - pokedex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Nginx reverse proxy (optional - use if you want single entry point)
  nginx:
    container_name: pokedex-nginx
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - pokedex-network
    restart: unless-stopped

  # Watchtower for auto-updates (optional)
  watchtower:
    image: containrrr/watchtower
    container_name: pokedex-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_LABEL_ENABLE=true
    restart: unless-stopped

networks:
  pokedex-network:
    driver: bridge