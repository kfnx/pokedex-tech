services:
  backend:
    image: ${DOCKER_REGISTRY}/${GITHUB_REPOSITORY}-backend:${VERSION:-latest}
    container_name: pokedex-backend
    build:
      context: ./pokedex-backend
      dockerfile: Dockerfile
    env_file:
      - ./.env.production
    ports:
      - "${BACKEND_PORT:-3000}:${BACKEND_PORT:-3000}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-3000}/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  frontend:
    image: ${DOCKER_REGISTRY}/${GITHUB_REPOSITORY}-frontend:${VERSION:-latest}
    container_name: pokedex-frontend
    build:
      context: ./pokedex-frontend
      dockerfile: Dockerfile
      args:
        BACKEND_API_URL: ${BACKEND_API_URL:-https://server.kafin.dev}
    env_file:
      - ./.env.production
    ports:
      - "8081:8081"
    depends_on:
      - backend
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Nginx reverse proxy (optional - use if you want single entry point)
  # nginx:
  #   container_name: pokedex-nginx
  #   image: nginx:alpine
  #   ports:
  #     - "${NGINX_PORT:-8080}:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - frontend
  #     - backend
  #   restart: unless-stopped

  # Watchtower for auto-updates (optional)
  # watchtower:
  #   image: containrrr/watchtower
  #   container_name: pokedex-watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=300
  #     - WATCHTOWER_LABEL_ENABLE=true
  #   restart: unless-stopped

