name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-type-check:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        project: [frontend, backend]

    steps:
    - uses: actions/checkout@v4

    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.1.38

    - name: Install dependencies
      working-directory: ./pokedex-${{ matrix.project }}
      run: bun install --frozen-lockfile

    - name: Run linting
      working-directory: ./pokedex-${{ matrix.project }}
      run: bun lint

    - name: Run typescript checking
      working-directory: ./pokedex-${{ matrix.project }}
      run: bun typecheck

  unit-tests:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        project: [frontend, backend]

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pokedex_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.1.38

    - name: Install dependencies
      working-directory: ./pokedex-${{ matrix.project }}
      run: bun install --frozen-lockfile

    - name: Setup test database
      if: matrix.project == 'backend'
      working-directory: ./pokedex-backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
      run: |
        npx prisma migrate deploy
        npx prisma generate

    - name: Start backend server
      if: matrix.project == 'backend'
      working-directory: ./pokedex-backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
        PORT: 3000
      run: |
        bun run dev &
        sleep 5
        curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:3000/health

    - name: Run tests
      working-directory: ./pokedex-${{ matrix.project }}
      env:
        DATABASE_URL: ${{ matrix.project == 'backend' && 'postgresql://postgres:postgres@localhost:5432/pokedex_test' || '' }}
        DIRECT_URL: ${{ matrix.project == 'backend' && 'postgresql://postgres:postgres@localhost:5432/pokedex_test' || '' }}
      run: bun test

  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pokedex_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: 1.1.38
    - name: Install dependencies for e2e tests
      working-directory: ./e2e
      run: bun install --frozen-lockfile
    - name: Install dependencies for frontend
      working-directory: ./pokedex-frontend
      run: bun install --frozen-lockfile
    - name: Install dependencies for backend
      working-directory: ./pokedex-backend
      run: bun install --frozen-lockfile
    - name: Setup test database
      working-directory: ./pokedex-backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
      run: |
        npx prisma migrate deploy
        npx prisma generate
        npm run seed
    - name: Install Playwright Browsers
      working-directory: ./e2e
      run: bunx playwright install --with-deps
    - name: Run Playwright tests
      working-directory: ./e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
        DIRECT_URL: postgresql://postgres:postgres@localhost:5432/pokedex_test
      run: bun run test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: e2e/playwright-report/
        retention-days: 30

  deploy:
    runs-on: ubuntu-22.04
    environment: production
    needs: [lint-and-type-check, unit-tests, e2e-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Clone repository if it doesn't exist
            if [ ! -d "~/pokedex-voltron" ]; then
              echo "Cloning repository..."
              git clone https://github.com/${{ github.repository }}.git ~/pokedex-voltron
            fi

            # Navigate and update
            cd ~/pokedex-voltron
            git pull origin main

            # Deploy with docker compose
            docker compose down || true
            docker compose up -d --build

            # Clean up
            docker system prune -f